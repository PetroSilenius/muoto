generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model answers {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  question_id String    @db.Uuid
  user_id     String    @db.Uuid
  value       String[]
  created_at  DateTime  @default(now()) @db.Timestamptz(6)
  updated_at  DateTime  @default(now()) @db.Timestamptz(6)
  questions   questions @relation(fields: [question_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users       users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([id, question_id, user_id])
}

model images {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id      String         @db.Uuid
  url          String
  approved     Boolean        @default(false)
  created_at   DateTime       @default(now()) @db.Timestamptz(6)
  updated_at   DateTime       @default(now()) @db.Timestamptz(6)
  users        users          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model questions {
  id      String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  content String
  description  String?
  type  questionType
  answers answers[]

  @@index([id])
}

model users {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String
  created_at   DateTime       @default(now()) @db.Timestamptz(6)
  updated_at   DateTime       @default(now()) @db.Timestamptz(6)
  answers      answers[]
  images       images[]
}

enum questionType {
  ACTIVITY
  POSITIVE_TRAIT
  NEGATIVE_TRAIT
}
